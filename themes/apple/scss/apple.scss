@import "compass";
@import "variables";



@-webkit-keyframes reference-loading-spinner-rotate{
  0%{     -webkit-transform: rotate(0deg);   }
  8.32%{  -webkit-transform: rotate(0deg);   }

  8.33%{  -webkit-transform: rotate(30deg);  }
  16.65%{ -webkit-transform: rotate(30deg);  }

  16.66%{ -webkit-transform: rotate(60deg);  }
  24.99%{ -webkit-transform: rotate(60deg);  }

  25%{    -webkit-transform: rotate(90deg);  }
  33.32%{ -webkit-transform: rotate(90deg);  }

  33.33%{ -webkit-transform: rotate(120deg); }
  41.65%{ -webkit-transform: rotate(120deg); }

  41.66%{ -webkit-transform: rotate(150deg); }
  49.99%{ -webkit-transform: rotate(150deg); }

  50%{    -webkit-transform: rotate(180deg); }
  58.32%{ -webkit-transform: rotate(180deg); }

  58.33%{ -webkit-transform: rotate(210deg); }
  66.65%{ -webkit-transform: rotate(210deg); }

  66.66%{ -webkit-transform: rotate(240deg); }
  74.99%{ -webkit-transform: rotate(240deg); }

  75%{    -webkit-transform: rotate(270deg); }
  83.32%{ -webkit-transform: rotate(270deg); }

  83.33%{ -webkit-transform: rotate(300deg); }
  91.65%{ -webkit-transform: rotate(300deg); }

  91.66%{ -webkit-transform: rotate(330deg); }
  100%{   -webkit-transform: rotate(330deg); }
}

@mixin arrow_style($side, $color) {
  @if $side == 'top' or $side == 'bottom' {
    border-left: $arrow-width solid transparent;
    border-right: $arrow-width solid transparent;
    left: 50%;
    margin-left: -1 * $arrow-width;
  } @else {
    border-top: $arrow-width solid transparent;
    border-bottom: $arrow-width solid transparent;
    top: 50%;
    margin-top: -1 * $arrow-width;
  }
  border-#{opposite-position($side)} : $arrow-height solid $color;
  #{opposite-position($side)} : 100%;
  margin-#{opposite-position($side)} : 0; //-1*$border-width;
  position: absolute;
  height: 0;
  width: 0;
}

@mixin arrow($side) {
  @include arrow_style($side, $border-color);
  
  
  &::after {
    @include arrow_style($side, $background-color);
    content: ' ';
    #{opposite-position($side)} : auto;
    #{$side}: $border-width + 2px;
    @if ($side == 'top') { -webkit-filter: drop-shadow(0 -2px 0 $inset-color) }
    @if ($side == 'right') { -webkit-filter: drop-shadow(2px 0 0 $inset-color) }
    @if ($side == 'bottom') { -webkit-filter: drop-shadow(0 2px 0 $inset-color) }
    @if ($side == 'left') { -webkit-filter: drop-shadow(-2px 0 0 $inset-color) }
  }
}


.reference-link-active.apple {
  background-color: rgb(255,243,86); // Old browsers
  @include filter-gradient(#fff356, #e5c510, vertical); // IE6-9
  @include background-image(linear-gradient(top, rgba(255,243,86,1) 0%,rgba(229,197,16,1) 100%));
  @include box-shadow(0 .1em .2em rgba(0,0,0,.5));
  padding: .1em .2em;
  margin: -.18em -.28em;
  border: .08em solid #FFEE00;
  border-radius: .4em;
  color: black;
}

.reference-bubble.apple {
  @include box-shadow(0 5px 20px rgba(0,0,0,.35), 0 0 1px $inset-color inset, 0 0 1px $inset-color inset, 0 0 1px $inset-color inset);
  font-family: Baskerville, Times New Roman, Times, serif;
  background: $background-color;
  border-color: $border-color;
  border-radius: 5px;
  border-style: $border-style;
  border-width: $border-width;
  color: $color;
  margin-bottom: 10px;
  max-height: 220px;
  opacity: .97;
  padding: 7px $padding-x;
  position: absolute;
  width: $width;
  z-index: 1;
  font-size: $font-size;
  

  
  &.down {
    top: 100%;
    left: 50%;
    margin-left: -1*($width/2 + $padding-x);
    margin-top: $arrow-height - 4px;
    
    .reference-bubble-arrow {
      @include arrow('top');
    }
  }

  &.left {
    right: 100%;
    top: -10%;
    margin-right: $arrow-height - 4px;
    
    .reference-bubble-arrow {
      @include arrow('right');
    }
  }

  &.up {
    bottom: 100%;
    left: 50%;
    margin-left: -1*($width/2 + $padding-x);
    margin-bottom: $arrow-height - 4px;
    
    .reference-bubble-arrow {
      @include arrow('bottom');
    }
  }

  &.right {
    left: 100%;
    top: -16px;
    margin-left: $arrow-height - 4px;
    .reference-bubble-arrow {
      @include arrow('left');
    }
  }
  
  .reference-collection-name {
    padding-bottom: 3px;
    border-bottom: 1px solid rgba($header-color,.3);
    @include box-shadow(0 1px 0 rgba($inset-color,.5));
    font-size: 1.2em;
    text-shadow: 1px 1px 0 white;
    color: $header-color;
    display: block;
    &:not(:nth-child(2)) {
      padding-top: 1em;
    }
  }
  
  
  // ripped off from sencha touch, fixed, and modified
  .reference-loading-spinner {
    font-size: 250%;
    height: $loading-spinner-size;
    margin: auto;
    width: $loading-spinner-size;
    position: relative;

    -webkit-transform-origin: $loading-spinner-size/2 $loading-spinner-size/2;

    /* Shared Properties for all the bars */
    & > span, & > span:before, & > span:after {
      display: block;
      position: absolute;
      width: $loading-spinner-bar-width;
      height: $loading-spinner-bar-height;
      top: 0;
      -webkit-transform-origin: $loading-spinner-bar-width/2 $loading-spinner-size/2;
      @include border-radius($loading-spinner-bar-width/2);
      content: " ";
    }

    & > span {
      &.reference-loading-top           {  background-color: rgba($loading-spinner-color,0.99); }
      &.reference-loading-top::after    {  background-color: rgba($loading-spinner-color,0.90); }
      &.reference-loading-left::before  {  background-color: rgba($loading-spinner-color,0.80); }
      &.reference-loading-left          {  background-color: rgba($loading-spinner-color,0.70); }
      &.reference-loading-left::after   {  background-color: rgba($loading-spinner-color,0.60); }
      &.reference-loading-bottom::before{  background-color: rgba($loading-spinner-color,0.50); }
      &.reference-loading-bottom        {  background-color: rgba($loading-spinner-color,0.40); }
      &.reference-loading-bottom::after {  background-color: rgba($loading-spinner-color,0.35); }
      &.reference-loading-right::before {  background-color: rgba($loading-spinner-color,0.30); }
      &.reference-loading-right         {  background-color: rgba($loading-spinner-color,0.25); }
      &.reference-loading-right::after  {  background-color: rgba($loading-spinner-color,0.20); }
      &.reference-loading-top::before   {  background-color: rgba($loading-spinner-color,0.15); }
    }
  }

  .reference-loading-spinner > span {
    left:         50%;
    margin-left:  -$loading-spinner-bar-width/2;
  }

  // .reference-loading-spinner > span::before, .reference-loading-spinner > span::after{  content: " "; }

  /* Rotate each of the 4 Spans */

  .reference-loading-spinner > span.reference-loading-top{    -webkit-transform: rotate(0deg);    -moz-transform: rotate(0deg);   }
  .reference-loading-spinner > span.reference-loading-right{  -webkit-transform: rotate(90deg);   -moz-transform: rotate(90deg);  }
  .reference-loading-spinner > span.reference-loading-bottom{ -webkit-transform: rotate(180deg);  -moz-transform: rotate(180deg); }
  .reference-loading-spinner > span.reference-loading-left{   -webkit-transform: rotate(270deg);  -moz-transform: rotate(270deg); }

  /* These are the two lines that surround each of the 4 Span lines */

  .reference-loading-spinner > span::before{-webkit-transform: rotate(30deg);   -moz-transform: rotate(30deg);  }
  .reference-loading-spinner > span::after{ -webkit-transform: rotate(-30deg);  -moz-transform: rotate(-30deg); }

  /* Set Animation */

  .reference-loading-spinner {
    -webkit-animation-name: reference-loading-spinner-rotate;
    -webkit-animation-duration: .5s;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-timing-function: linear;
  }
  
}
